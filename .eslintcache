[{"C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\index.js":"1","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\App.js":"2","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\reportWebVitals.js":"3","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\CreateUser.js":"4","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\UserPage.js":"5","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\UserBooks.js":"6","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\Navi.js":"7","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\RegisterPage.js":"8","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\Services.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":3714,"mtime":1610697839090,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3150,"mtime":1610705023910,"results":"14","hashOfConfig":"11"},{"size":6883,"mtime":1610703836653,"results":"15","hashOfConfig":"11"},{"size":3313,"mtime":1610703839658,"results":"16","hashOfConfig":"11"},{"size":1624,"mtime":1610701326393,"results":"17","hashOfConfig":"11"},{"size":3458,"mtime":1610701322256,"results":"18","hashOfConfig":"11"},{"size":2319,"mtime":1610700870224,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16pw4rr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\index.js",[],["44","45"],"C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\App.js",["46","47","48","49","50","51","52","53","54","55"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport UserBooks from './Library/UserBooks';\nimport CreateUser from './Library/CreateUser';\nimport UserPage from './Library/UserPage';\nimport RegisterPage from './Library/RegisterPage';\nimport { Nav, Navbar, NavDropdown, Button, Carousel, Collapse, Breadcrumb, Accordion, Card } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport Navi from './Library/Navi';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \nfunction App() {\n  \n  return (\n<div className=\"Task\">\n<div className=\"header\">\n  <h1  style={{ color: 'red' }} >LIBRARY MANAGEMENT SYSTEM</h1>\n  <Router>\n    <Navi />\n    <Switch>\n      <Route path=\"/userpage\" component={UserPage} />\n      <Route path=\"/userbooks\" component={UserBooks} />\n      <Route path=\"/createuser\" component={CreateUser} />\n      <Route path=\"/registerpage\" component={RegisterPage} />\n    </Switch>\n    </Router>\n    <div className=\"bg\">\n    <div class=\"main_content\">\n           \n            <div class=\"info\">\n              <div className=\"lib\">A library is a curated collection of sources of information and similar resources, selected by experts and made accessible to a defined community for reference or borrowing, often in a quiet environment conducive to study. dolor sit, amet consectetur adipisicing elit. A sed nobis ut exercitationem atque accusamus sit natus officiis totam blanditiis at eum nemo, nulla et quae eius culpa eveniet voluptatibus repellat illum tenetur, facilis porro. A library is a curated collection of sources of information and similar resources, selected by experts and made accessible to a defined community for reference or borrowing.A library is a curated collection of sources of information and similar resources, selected by experts and made accessible to a defined community for reference or borrowing, often in a quiet environment conducive to study.</div>\n                {/* <DisplayEmployees /> */}\n              <Carousel >\n                <Carousel.Item>\n                  <img\n                    className=\"d-block w-100\"\n                   src=\"https://image.shutterstock.com/image-photo/books-new-modern-library-stuttgart-600w-674867536.jpg\"\n                    alt=\"First slide\"\n                    width={600} height={400}\n                  />\n                  <Carousel.Caption>\n                    <h3>ANNA LIBRARY</h3>\n                    <p>CHENNAI</p>\n                  </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                  <img\n                    className=\"d-block w-100\"\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXbcmx1IoRt3q3NeW3_d-Mz1DZLpAmrot6aA&usqp=CAU\"\n                    alt=\"Third slide\"\n                    width={600} height={400}\n                  />\n \n                  <Carousel.Caption>\n                    <h3>NATIONAL LIBRARY</h3>\n                    <p>BANGALORE</p>\n                  </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                  <img\n                    className=\"d-block w-100\"\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXbcmx1IoRt3q3NeW3_d-Mz1DZLpAmrot6aA&usqp=CAU\"\n                    alt=\"Third slide\"\n                    width={600} height={400}\n                  />\n \n                  <Carousel.Caption>\n                    <h3>CENTRAL LIBRARY</h3>\n                    <p>NOIDA</p>\n                  </Carousel.Caption>\n                </Carousel.Item>\n              </Carousel>\n              </div>\n \n </div>\n \n</div>\n</div>\n \n</div>\n)}\nexport default App;","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\reportWebVitals.js",[],"C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\CreateUser.js",["56","57","58"],"C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\UserPage.js",["59"],"// import React, { Component } from 'react'\r\n// import { Table} from 'react-bootstrap';\r\n \r\n// class UserPage extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n \r\n//         this.state = {\r\n//             bookDetails:[]\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch(\"http://localhost:3000/books\").then(\r\n//       res => {\r\n//         res.json()\r\n//           .then(endRes => this.setState({ bookDetails: endRes })).catch(err => console.log(err))\r\n//       })\r\n//       .catch(err => console.log(err))\r\n \r\n//     }\r\n    \r\n//     render() {\r\n//         let user = JSON.parse(localStorage.getItem(\"authenticted_user\"));\r\n\r\n//         console.log(user.username)\r\n//        let result=[];\r\n//        const{bookDetails}=this.state\r\n//         for (let i = 0; i < bookDetails.length; i++) {\r\n//             result.push(\r\n//                 <tr>\r\n//                     <td>{bookDetails[i].id}</td>\r\n//                     <td>{bookDetails[i].title}</td>\r\n//                     <td>{bookDetails[i].author}</td>\r\n//                     <td>{bookDetails[i].subject}</td>\r\n//                     <td><button>Reserve</button>&nbsp;&nbsp;&nbsp;<button>check out</button></td>\r\n//                 </tr>\r\n            \r\n//            )\r\n \r\n//         }\r\n//         console.log(\"bookDetails\",bookDetails);\r\n//         return (\r\n \r\n//             <div>\r\n//                 <Table striped bordered hover variant=\"dark\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>Id</th>\r\n//                             <th>Title</th>\r\n//                             <th>Author</th>\r\n//                             <th>Subject</th>\r\n//                             <th>Status</th>\r\n//                         </tr>\r\n//                     </thead>\r\n                    \r\n//                     <tbody>\r\n                       \r\n//                         {result}\r\n//                     </tbody>\r\n//                 </Table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n \r\n// export default UserPage\r\n\r\n\r\n\r\n\r\n\r\n    \r\nimport React, { Component } from 'react'\r\nimport { Table,Nav} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'; \r\n\r\n\r\n\r\n \r\nclass UserPage extends Component {\r\n \r\n    constructor(props) {\r\n        super(props)\r\n \r\n        this.state = {\r\n \r\n            bookDetails: [],\r\n            searchedBooks: []\r\n \r\n        }\r\n    }\r\n \r\n    componentDidMount() {\r\n        fetch(\"http://localhost:3000/books\").then(\r\n            res => {\r\n                res.json()\r\n                    .then(endRes => this.setState({ bookDetails: endRes, searchedBooks: endRes })).catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err))\r\n \r\n    }\r\n    \r\n    handleClick = (p, user) => {\r\n \r\n        let temp = {\r\n            ...p,\r\n            available_copies: p.available_copies - 1,\r\n            issued_to: [...p.issued_to, user.name]\r\n        }\r\n        fetch(\"http://localhost:3000/books/\" + p.id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(temp),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }\r\n        ).then(result => result.json().then(data => console.log(data))).catch(err => console.log(err))\r\n        this.props.history.push(\"/userbooks\");\r\n \r\n    }\r\n \r\n    handleChange = (event) => {\r\n        let x = document.getElementById(\"select\").value;\r\n \r\n        let search = event.target.value;\r\n        if (search !== undefined) {\r\n            console.log(\"select value\", x);\r\n            if (x === \"title\") {\r\n                this.setState(state => state.searchedBooks = this.state.bookDetails.filter(p => p.title.toLowerCase().includes(search.toLowerCase())))\r\n            }\r\n            else if (x === \"author\") {\r\n                this.setState(state => state.searchedBooks = this.state.bookDetails.filter(p => p.author.toLowerCase().includes(search.toLowerCase())))\r\n            }\r\n            else if (x === \"id\") {\r\n                this.setState(state => state.searchedBooks = this.state.bookDetails.filter(p => p.id===search))\r\n            }\r\n        } else {\r\n            this.setState(state => state.searchedBooks = this.state.bookDetails)\r\n        }\r\n \r\n    }\r\n \r\n    render() {\r\n \r\n        const { bookDetails } = this.state\r\n\r\n\r\n \r\n        let user = JSON.parse(localStorage.getItem(\"authenticted_user\"));\r\n        console.log(user.name)\r\n \r\n        console.log(\"bookDetails\", bookDetails);\r\n \r\n        return (\r\n           \r\n\r\n            <div>\r\n              \r\n                <div className=\"tablediv\">\r\n                    \r\n                    <div className=\"search\">\r\n                    <select id=\"select\" >\r\n                            <option value=\"title\" >Title</option>\r\n                            <option value=\"author\" >Author</option>\r\n                            {/* <option value=\"genre\">ID</option> */}\r\n                        </select>\r\n \r\n                        <input type=\"text\" placeholder=\"Search Books...\" name=\"search\" onChange={this.handleChange} /><br/><br/>\r\n                        {/* <button onClick={this.handleSubmit}>Search</button>*/}\r\n                        <Link to='/userbooks' className=\"btn btn-primary\">My Books</Link>\r\n                \r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <Table className=\"table\" striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n\r\n\r\n                            <th>Id</th>\r\n                                <th>Title</th>\r\n                                <th>Author</th>\r\n                               \r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n \r\n                        <tbody>\r\n                            {this.state.searchedBooks.map(p => p.available_copies > 0 ? <tr>\r\n                                <td>{p.id}</td>\r\n                                <td>{p.title}</td>\r\n                                <td>{p.author}</td>\r\n                                {/* <td>{p.status}</td> */}\r\n                                <td><button className=\"btn btn-success\" onClick={() => this.handleClick(p, user)}>Check-Out</button></td>\r\n                            </tr>\r\n                                : <tr>\r\n                                    <td>{p.id}</td>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.author}</td>\r\n                                    {/* <td>{p.status}</td> */}\r\n                                    <td><button className=\"btn btn-danger disabled\" >Out-Of-Stock</button></td>\r\n                                </tr>)}\r\n                                </tbody>\r\n \r\n </Table>\r\n</div>\r\n</div>\r\n\r\n)\r\n}\r\n}\r\n\r\nexport default UserPage","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\UserBooks.js",["60"],"import React, { Component } from 'react'\r\nimport { Table,Nav } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserBooks extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n \r\n        this.state = {\r\n            bookDetails: []\r\n        }\r\n    }\r\n    handleClick(p,user){\r\n        let issue=p.issued_to.filter((book)=>{return book!==user.username})\r\n        let temp={\r\n            ...p,\r\n            available_copies:p.available_copies+1,\r\n            issued_to:[...issue]\r\n        }\r\n        fetch(\"http://localhost:3000/books/\"+p.id,{\r\n            method:'PUT',\r\n            body:JSON.stringify(temp),\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n        ).then(result=>result.json().then(data=>console.log(data))).catch(err=>console.log(err))\r\n        this.props.history.push(\"/userpage\");\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:3000/books\").then(\r\n            res => {\r\n                res.json()\r\n                    .then(endRes => this.setState({ bookDetails: endRes, searchedBooks: endRes })).catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err))\r\n \r\n    }\r\n    componentDidUpdate() {\r\n        fetch(\"http://localhost:3000/books\").then(\r\n            res => {\r\n                res.json()\r\n                    .then(endRes => this.setState({ bookDetails: endRes, searchedBooks: endRes })).catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err))\r\n \r\n    }\r\n \r\n    render() {\r\n        let user = JSON.parse(localStorage.getItem(\"authenticted_user\"));\r\n        let result = []\r\n        const{bookDetails}=this.state\r\n        console.log(user.name);\r\n        console.log(bookDetails)\r\n        for (let i = 0; i < bookDetails.length; i++) {\r\n            console.log(bookDetails[i]);\r\n            if(bookDetails[i].issued_to.includes(user.name)){\r\n            result.push(\r\n                <tr>\r\n                    <td>{bookDetails[i].id}</td>\r\n                    <td>{bookDetails[i].title}</td>\r\n                    <td>{bookDetails[i].author}</td>\r\n                    <td>{bookDetails[i].subject}</td>\r\n                    <td><button className=\"btn btn-warning\" onClick={()=>this.handleClick(bookDetails[i],user)}>Return</button></td>\r\n                </tr>\r\n \r\n            )\r\n            }\r\n \r\n        }      \r\n        return (\r\n            <div>\r\n                \r\n                \r\n                <div className=\"tablediv\">\r\n                    <Table className=\"table\" striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Id</th>\r\n                                <th>Title</th>\r\n                                <th>Author</th>\r\n                                <th>Genre</th>\r\n                                <th>Status</th>\r\n                                </tr>\r\n                        </thead>\r\n \r\n                        <tbody>\r\n                           {result}\r\n                        </tbody>\r\n \r\n                    </Table>\r\n\r\n\r\n                    <Link to='/userpage' className=\"btn btn-primary\">Books List</Link>\r\n                </div>\r\n            </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default UserBooks","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\Navi.js",[],"C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\RegisterPage.js",["61","62"],"import React from 'react'\r\nimport { insertUsers} from './Services'\r\n \r\n\r\n \r\nimport { Nav } from 'react-bootstrap'\r\n \r\nclass RegisterPage extends React.Component {\r\n \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id:\"\" ,\r\n      name: '',\r\n      jobrole: ''\r\n \r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    //console.log(event)\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n \r\n  }\r\n  handleSubmit = (e) => {\r\n    \r\n    const userObj = {\r\n      \"id\": this.state.id,\r\n      \"name\": this.state.name,\r\n      \"jobrole\": this.state.jobrole\r\n    }\r\n    this.setState({\r\n      id : \"\",\r\n      name: '',\r\n      jobrole : ''\r\n    })\r\n    const insertResult = insertUsers(userObj);\r\n    alert(\"successfully registered..please login!!\");\r\n    \r\n  }\r\n  submitRegister(e) { }\r\n \r\n  render() {\r\n    return (\r\n    //     <div>\r\n          \r\n    //       <div className=\"inner-container\">\r\n   \r\n    //         <div className=\"box\">\r\n    //           <div className=\"header\">\r\n    //             Register\r\n    //         </div>\r\n    //           <form onSubmit={this.handleSubmit}>\r\n   \r\n    //             <div className=\"input-group\">\r\n    //               <label htmlFor=\"id\">ID</label>\r\n    //               <input type=\"text\" name=\"email\" value={this.state.id} onChange={this.handleChange} className=\"login-input\" placeholder=\"Email\" />\r\n    //             </div>\r\n    //             <div className=\"input-group\">\r\n    //               <label htmlFor=\"username\">Username</label>\r\n    //               <input\r\n    //                 type=\"text\"\r\n    //                 name=\"username\" value={this.state.name} onChange={this.handleChange}\r\n    //                 className=\"login-input\"\r\n    //                 placeholder=\"Username\" />\r\n    //             </div>\r\n    //             <div className=\"input-group\">\r\n    //             <label htmlFor=\"password\">Password</label>\r\n    //             <input\r\n    //               type=\"password\"\r\n    //               name=\"password\" value={this.state.jobrole} onChange={this.handleChange}\r\n    //               className=\"login-input\"\r\n    //               placeholder=\"Password\" />\r\n    //           </div>\r\n    //           <button\r\n    //             type=\"button\"\r\n    //             className=\"login-btn\"\r\n    //             onClick={this.handleSubmit}>Register</button><br /><br />\r\n    //           <p ><b><a href=\"/login\" className=\"message\">Already a user? Login</a></b></p>\r\n    //         </form>\r\n    //       </div>\r\n \r\n    //     </div>\r\n    //   </div>\r\n\r\n\r\n    <form  onSubmit={this.handleSubmit}>\r\n    <div>\r\n        <label>Identity No:</label>\r\n        <input type='text' name=\"id\" value={this.state.id} onChange={this.handleChange}placeholder=\"Enter unique ID\" required/>\r\n    </div>\r\n    <div>\r\n        <label>User Name:</label>\r\n        <input type='text' name=\"name\" value={this.state.name} onChange={this.handleChange}placeholder=\"Enter Username\" required/>\r\n    </div>\r\n    <div>\r\n        <label>Password     :</label>&nbsp;&nbsp;\r\n        <input type='password' name=\"jobrole\" value={this.state.jobrole} onChange={this.handleChange} placeholder=\"Enter valid Password\" required/>\r\n    </div>\r\n    <div>\r\n      \r\n        <button type='submit' class=\"btn btn-primary\" onChange={this.handleSubmit}   >Register</button>&nbsp;&nbsp;&nbsp;\r\n        \r\n        \r\n       \r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default RegisterPage  \r\n\r\n\r\n\r\n","C:\\REACT EXAMPLES\\LibraryManagementSystem\\mylibproj\\src\\Library\\Services.js",["63"],"const fetchUsers=(callback)=>{\r\n    let usersObj=[];\r\n\r\n    fetch(\"http://localhost:15000/SpringMVCHibernateCRUD/employee/fetchData\").then(\r\n        res=>{\r\n            console.log(res.json()\r\n              .then(endRes=>{callback(endRes); return endRes}))\r\n            \r\n        })\r\n        .catch(err=>console.log(err))\r\n        \r\n        }\r\n    const insertUser=(users,callback)=>{\r\n        // fetch(\"http://localhost:3000/users\",{\r\n        //     method:'POST',\r\n        //     body:JSON.stringify(users),\r\n        //     headers:{\r\n        //         'content-type':'application/json'\r\n        //     }\r\n        // }\r\n        // ).then(result=>result.json().then(data=>console.log(data))).catch(err=>console.log(err))\r\n            \r\n        const id = users.id;\r\n        const apiUrl = `http://localhost:3000/users/${id}`;\r\n        fetch(apiUrl).then(data => {if (data.status >  400){\r\n        alert(\"invalid user\")};return data.json()}).then(data=> callback(users,data)).catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n\r\n    const deleteUser=(id)=>{\r\n        const apiUrl = `http://localhost:3000/posts/${id}`;\r\n        try{\r\n            fetch (apiUrl, {\r\n                method : \"DELETE\"\r\n            }).then(data => {\r\n                return data.json();\r\n            }).then(data => console.log(\"data Successfully deleted\"));\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }   \r\n    \r\n    \r\n    const getUsers=(callback)=> {\r\n        const apiUrl = 'http://localhost:3000/users/';\r\n        fetch(apiUrl).then((response) => response.json())\r\n            .then((data) => callback(data));\r\n    }\r\n\r\n    // export const getBooks  = (callback) => {\r\n    //     const apiURL = `http://localhost:3500/bookname`;\r\n    //     fetch(apiURL).then(res => res.json()).then(data => callback(data)).catch(err =>console.log(err));\r\n    \r\n    // }\r\n\r\n\r\n\r\n    const insertUsers=(users)=>{\r\n        fetch(\"http://localhost:3000/users\",{\r\n            method:'POST',\r\n            body:JSON.stringify(users),\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n        ).then(result=>result.json().then(data=>console.log(data))).catch(err=>console.log(err))\r\n            \r\n        \r\n    }\r\n    export {fetchUsers,insertUser,deleteUser,getUsers,insertUsers}\r\n\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":7,"column":15,"nodeType":"70","messageId":"71","endLine":7,"endColumn":21},{"ruleId":"68","severity":1,"message":"73","line":7,"column":23,"nodeType":"70","messageId":"71","endLine":7,"endColumn":34},{"ruleId":"68","severity":1,"message":"74","line":7,"column":36,"nodeType":"70","messageId":"71","endLine":7,"endColumn":42},{"ruleId":"68","severity":1,"message":"75","line":7,"column":54,"nodeType":"70","messageId":"71","endLine":7,"endColumn":62},{"ruleId":"68","severity":1,"message":"76","line":7,"column":64,"nodeType":"70","messageId":"71","endLine":7,"endColumn":74},{"ruleId":"68","severity":1,"message":"77","line":7,"column":76,"nodeType":"70","messageId":"71","endLine":7,"endColumn":85},{"ruleId":"68","severity":1,"message":"78","line":7,"column":87,"nodeType":"70","messageId":"71","endLine":7,"endColumn":91},{"ruleId":"68","severity":1,"message":"79","line":8,"column":10,"nodeType":"70","messageId":"71","endLine":8,"endColumn":20},{"ruleId":"68","severity":1,"message":"80","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":14},{"ruleId":"68","severity":1,"message":"80","line":3,"column":9,"nodeType":"70","messageId":"71","endLine":3,"endColumn":13},{"ruleId":"68","severity":1,"message":"74","line":4,"column":9,"nodeType":"70","messageId":"71","endLine":4,"endColumn":15},{"ruleId":"68","severity":1,"message":"81","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":74,"column":16,"nodeType":"70","messageId":"71","endLine":74,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":2,"column":16,"nodeType":"70","messageId":"71","endLine":2,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":13},{"ruleId":"68","severity":1,"message":"82","line":38,"column":11,"nodeType":"70","messageId":"71","endLine":38,"endColumn":23},{"ruleId":"68","severity":1,"message":"83","line":2,"column":9,"nodeType":"70","messageId":"71","endLine":2,"endColumn":17},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Button' is defined but never used.","'Collapse' is defined but never used.","'Breadcrumb' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'withRouter' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'insertResult' is assigned a value but never used.","'usersObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]